name: Build

on:
  push:
    tags:
      - '*'

jobs:
  backend:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        php: [8.2, 8.3]

    steps:
      - uses: actions/checkout@v2

      - name: Validate composer.json and composer.lock
        run: composer validate --strict --no-check-version

      - name: Cache Composer packages
        id: composer-cache
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run unit test suite
        run: composer run-script unit

      - name: Validate coding standards
        run: composer run-script cs

      - name: Run linters
        run: composer run-script lint

      - name: Run static analysis
        run: composer run-script stan

  frontend:

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [18]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install frontend dependencies
        run: npm install

      - name: Run frontend test suite
        run: npm test

  acceptance:

    strategy:
      matrix:
        os: [ubuntu-latest]
        php: [8.2, 8.3]
        node-version: [18]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Composer packages
        id: composer-cache
        uses: shivammathur/setup-php@v2
        with:
          path: vendor
          php-version: ${{ matrix.php }}
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress && npm install

      - name: Build frontend assets
        run: npm run build

      - name: Run application server
        run: echo 'deb [trusted=yes] https://repo.symfony.com/apt/ /' | sudo tee /etc/apt/sources.list.d/symfony-cli.list && sudo apt update && sudo apt install symfony-cli && APP_ENV=prod DEFAULT_REPOSITORY_DIR=${{ github.workspace }}/tests/fixtures symfony server:start --port=8880 -d

      - name: Run Cypress acceptance tests
        uses: cypress-io/github-action@v2

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install frontend dependencies
        run: npm install

      - name: Build package
        run: make build

      - name: Rename package to current tag
        run: mv build.zip gitlist-fork-${{ github.ref_name }}.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: gitlist-fork-${{ github.ref_name }}.zip
